name: PHPUnit Testsuite

on:
  pull_request:
    branches: [ "main" ]
  merge_group:
    types: [ checks_requested ]

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-22.04
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          REDIS_PASSWORD: secret
    steps:
      # Checkout code
      - uses: actions/checkout@v3

      # Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: >-
            dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite,
            bcmath, soap, intl, gd, exif, iconv
          coverage: none

      # Cache composer
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      # Cache npm dependencies
      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Update package list
        run: sudo apt-get update

      # Install dependencies with --prefer-dist for faster installation
      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Install NPM dependencies
        run: npm ci

      - name: Build Vite assets
        run: npm run build

      - name: Create .env file
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Install npm dependencies
        run: npm install

      - name: Build Vite assets
        run: npm run build

      - name: Start dev server in background
        run: php artisan serve &

      - name: Prepare Laravel Application
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Run tests
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ':memory:'
          REDIS_HOST: localhost
          REDIS_PASSWORD: secret
          REDIS_PORT: 6379
        run: ./vendor/bin/phpunit
